(function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r=[].indexOf||function(a){for(var b=0,c=this.length;b<c;b++){if(b in this&&this[b]===a)return b}return-1};n=[];h=[];p=[];j=false;l=false;e="keypress_events";b={keys:[],count:0,is_ordered:false,is_repeating:false,on_down:null,on_release:function(){}};o=function(a,b){var c,d;if(!(a&&b!=null)){return false}if((c=a.indexOf(b))>-1){[].splice.apply(a,[c,c-c+1].concat(d=[])),d}return a};a=function(){var a,b,c,d,e,f,g;b=[];for(d=0,f=arguments.length;d<f;d++){a=arguments[d];for(e=0,g=a.length;e<g;e++){c=a[e];b.push(c)}}return b};c=function(a,b){'This will ignore the ordering of the arrays\nand simply check if they have the same contents.\n\nThis isn\'t perfect as for example these two \narrays would evaluate as being the same:\n["apple", "orange", "orange"], ["orange", "apple", "apple"]\nBut it will serve for now.';var c,d,e,f,g;if(a.length!==b.length){return false}for(d=0,f=a.length;d<f;d++){c=a[d];if(r.call(b,c)>=0){continue}return false}for(e=0,g=b.length;e<g;e++){c=b[e];if(r.call(a,c)>=0){continue}return false}return true};i=function(a,b,d){var e,f,g;if(a==null){a=h}if(b==null){b=n}if(d==null){d=false}for(f=0,g=b.length;f<g;f++){e=b[f];if(e.is_ordered){if(a.join("")===e.keys.join("")){return e}if(d&&a.join("")===e.keys.slice(0,a.length).join("")){return e}}else{if(c(a,e.keys)){return e}if(d&&c(a,e.keys.slice(0,a.length))){return e}}}return false};k=function(a){"This only happens if we have pressed a registered\nkey combo, or if we're working towards one.";l=true;return a.preventDefault()};f=function(b,d){var e,f,g,j,m,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E;u=true;for(w=0,A=h.length;w<A;w++){j=h[w];if(j===b){u=false}}if(!u){if(l){k(d)}return}l=false;h.push(b);m=i(h,p);if(!m){D=null;for(g=x=1,E=h.length;1<=E?x<=E:x>=E;g=1<=E?++x:--x){r=h.slice(-g);D=i(r)||D}for(y=0,B=p.length;y<B;y++){v=p[y];if(v.is_activated){continue}q=a(v.keys,[b]);D=i(q)||D}if(D){m=$.extend(true,{},D);p.push(m);k(d)}else{for(z=0,C=n.length;z<C;z++){e=n[z];f=e.keys.slice(0,h.length);if(c(h,f)){k(d);return}}}}else{m.is_activated=false;k(d)}if(!m){return}if(m.is_repeating){m.count+=1;m.on_down(m.count)}else{if(typeof m.on_down==="function"){m.on_down()}}if(!(m.keys.length>1)){return}s=o($.extend(true,[],m.keys),b);t=i(s,p,true);if(t===m){return}if(!t){return}o(p,t)};g=function(a){var b,c,d,e,f,g,i,j;if(r.call(h,a)<0){return}h=o(h,a);for(e=0,g=p.length;e<g;e++){d=p[e];if(r.call(d.keys,a)>=0){c=d;break}}if(!c){return}b=false;j=c.keys;for(f=0,i=j.length;f<i;f++){a=j[f];if(r.call(h,a)>=0){b=true;break}}if(!c.is_activated){if(c.is_repeating){if(!b){c.on_release()}}else{c.on_release();c.is_activated=true}}if(!b){p=o(p,c)}};m=function(a,b){var c;if(j){if(h.length){h=[]}return}if(!b&&!h.length){return}c=d(a.keyCode);if(!c){return}if(b){return f(c,a)}else{return g(c)}};q=function(a){return true};window.keypress={};keypress.wire=function(){$("body").bind("keydown."+e,function(a){return m(a,true)}).bind("keyup."+e,function(a){return m(a,false)});return $(window).bind("blur."+e,function(){h=[];return p=[]})};keypress.combo=function(a,b){"Shortcut for simple combos.";return keypress.register_combo({keys:a,on_release:b})};keypress.register_many_combos=function(a){"Shortcut for assigning an array of combos.";var b,c,d;for(c=0,d=a.length;c<d;c++){b=a[c];keypress.register_combo(b)}return true};keypress.register_combo=function(a){$.extend(true,{},b,a);if(q(a)){n.push(a);return true}};keypress.listen=function(){return j=false};keypress.stop_listening=function(){return j=true};d=function(a){switch(a){case 9:return"tab";break;case 13:return"enter";break;case 16:return"shift";break;case 17:return"ctrl";break;case 18:return"alt";break;case 27:return"escape";break;case 32:return"space";break;case 37:return"left";break;case 38:return"up";break;case 39:return"right";break;case 40:return"down";break;case 49:return"1";break;case 50:return"2";break;case 51:return"3";break;case 52:return"4";break;case 53:return"5";break;case 65:return"a";break;case 67:return"c";break;case 68:return"d";break;case 69:return"e";break;case 70:return"f";break;case 81:return"q";break;case 82:return"r";break;case 83:return"s";break;case 84:return"t";break;case 87:return"w";break;case 88:return"x";break;case 90:return"z";break;case 91:return"cmd";break;case 224:return"cmd";break}return false}}).call(this)